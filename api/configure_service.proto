syntax = "proto3";

package v1;
option go_package = "./v1;v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "configure_environment.proto";
import "configure_server.proto";
import "configure_resource.proto";
import "configure_resource_value.proto";
import "configure_resource_server.proto";
import "configure_business.proto";
import "configure_business_value.proto";
import "configure_template.proto";

service Service {

  rpc AllEnvironment (google.protobuf.Empty) returns (AllEnvironmentReply) {
    option (google.api.http) = {
      get: "/v1/environments"
      response_body:"*"
    };
  }

  rpc AddEnvironment (AddEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/environment",
      body:"*",
    };
  }

  rpc UpdateEnvironment (UpdateEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/environment",
      body:"*"
    };
  }

  rpc DeleteEnvironment (DeleteEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/environment"
    };
  }


  rpc GetEnvironmentToken (GetEnvironmentTokenRequest) returns (GetEnvironmentTokenReply) {
    option (google.api.http) = {
      get: "/v1/environment/token"
    };
  }

  rpc ResetEnvironmentToken (ResetEnvironmentTokenRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/environment/resetToken",
      body:"*"
    };
  }

  rpc PageServer (PageServerRequest) returns (PageServerReply) {
    option (google.api.http) = {
      get: "/v1/servers",
      response_body: "*"
    };
  }

  rpc GetServer (GetServerRequest) returns (GetServerReply) {
    option (google.api.http) = {
      get: "/v1/server",
      response_body: "server"
    };
  }

  rpc AddServer (AddServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/server",
      body:"*"
    };
  }

  rpc UpdateServer (UpdateServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/server",
      body:"*"
    };
  }

  rpc DeleteServer (DeleteServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/server"
    };
  }

  rpc PageResource (PageResourceRequest) returns (PageResourceReply) {
    option (google.api.http) = {
      get: "/v1/resources",
      response_body: "*"
    };
  }

  rpc AddResource (AddResourceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/resource",
      body:"*"
    };
  }

  rpc UpdateResource (UpdateResourceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/resource",
      body:"*"
    };
  }

  rpc DeleteResource (DeleteResourceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/resource"
    };
  }

  rpc AllResourceServer (AllResourceServerRequest) returns (AllResourceServerReply) {
    option (google.api.http) = {
      get: "/v1/resource/servers",
      response_body: "*"
    };
  }

  rpc AddResourceServer (AddResourceServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/resource/server",
      body:"*"
    };
  }

  rpc DeleteResourceServer (DeleteResourceServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/resource/server"
    };
  }

  rpc AllServerResource (AllServerResourceRequest) returns (AllServerResourceReply) {
    option (google.api.http) = {
      get: "/v1/server/resources",
      response_body: "*"
    };
  }

  rpc AllResourceValue (AllResourceValueRequest) returns (AllResourceValueReply) {
    option (google.api.http) = {
      get: "/v1/resource/values",
      response_body: "*"
    };
  }

  rpc AddResourceValue (AddResourceValueRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/resource/value",
      body:"*"
    };
  }

  rpc UpdateResourceValue (UpdateResourceValueRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/resource/value",
      body:"*"
    };
  }

  rpc PageBusiness (PageBusinessRequest) returns (PageBusinessReply) {
    option (google.api.http) = {
      get: "/v1/business",
      response_body: "*"
    };
  }

  rpc AddBusiness (AddBusinessRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/business",
      body:"*"
    };
  }

  rpc UpdateBusiness (UpdateBusinessRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/business",
      body:"*"
    };
  }

  rpc DeleteBusiness (DeleteBusinessRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/business"
    };
  }

  rpc AllBusinessValue (AllBusinessValueRequest) returns (AllBusinessValueReply) {
    option (google.api.http) = {
      get: "/v1/business/values",
      response_body: "*"
    };
  }

  rpc AddBusinessValue (AddBusinessValueRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/business/value",
      body:"*"
    };
  }

  rpc UpdateBusinessValue (UpdateBusinessValueRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/business/value",
      body:"*"
    };
  }

  rpc PageTemplate (PageTemplateRequest) returns (PageTemplateReply) {
    option (google.api.http) = {
      get: "/v1/templates",
      response_body: "*"
    };
  }

  rpc GetTemplate (GetTemplateRequest) returns (GetTemplateReply) {
    option (google.api.http) = {
      get: "/v1/template",
      response_body: "*"
    };
  }

  rpc CurrentTemplate (CurrentTemplateRequest) returns (CurrentTemplateReply) {
    option (google.api.http) = {
      get: "/v1/template/current",
      response_body: "*"
    };
  }

  rpc AddTemplate (AddTemplateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/template",
      body:"*"
    };
  }

  rpc UpdateTemplateVersion (UseTemplateVersionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/template",
      body:"*"
    };
  }

  rpc ParseTemplate (ParseTemplateRequest) returns (ParseTemplateReply) {
    option (google.api.http) = {
      post: "/v1/template/parse",
      body:"*"
    };
  }

  rpc WatchConfig (WatchConfigRequest) returns (stream WatchConfigReply);

}


