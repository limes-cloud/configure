# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Service API
    version: 0.0.1
paths:
    /configure/v1/business:
        get:
            tags:
                - Service
            operationId: Service_PageBusiness
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
                - name: serverId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageBusinessReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateBusiness
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBusinessRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddBusiness
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddBusinessRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteBusiness
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/business/value:
        put:
            tags:
                - Service
            operationId: Service_UpdateBusinessValue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBusinessValueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/business/values:
        get:
            tags:
                - Service
            operationId: Service_AllBusinessValue
            parameters:
                - name: businessId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllBusinessValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/configure/{envKeyword}:
        get:
            tags:
                - Service
            operationId: Service_GetConfigure
            parameters:
                - name: envKeyword
                  in: path
                  required: true
                  schema:
                    type: string
                - name: serverId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConfigureReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateConfigure
            parameters:
                - name: envKeyword
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateConfigureRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/environment:
        put:
            tags:
                - Service
            operationId: Service_UpdateEnvironment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEnvironmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddEnvironment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddEnvironmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteEnvironment
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/environment/token:
        get:
            tags:
                - Service
            operationId: Service_GetEnvironmentToken
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEnvironmentTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_ResetEnvironmentToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetEnvironmentTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetEnvironmentTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/environments:
        get:
            tags:
                - Service
            operationId: Service_AllEnvironment
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllEnvironmentReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/login:
        post:
            tags:
                - Service
            operationId: Service_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/resource:
        put:
            tags:
                - Service
            operationId: Service_UpdateResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteResource
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/resource/servers:
        get:
            tags:
                - Service
            operationId: Service_AllResourceServer
            parameters:
                - name: resourceId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllResourceServerReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/resource/value:
        put:
            tags:
                - Service
            operationId: Service_UpdateResourceValue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateResourceValueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/resource/values:
        get:
            tags:
                - Service
            operationId: Service_AllResourceValue
            parameters:
                - name: resourceId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllResourceValueReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/resources:
        get:
            tags:
                - Service
            operationId: Service_PageResource
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
                - name: tag
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageResourceReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/server:
        get:
            tags:
                - Service
            operationId: Service_GetServer
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetServerReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateServer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateServerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddServer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddServerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteServer
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/server/resources:
        get:
            tags:
                - Service
            operationId: Service_PageServerResource
            parameters:
                - name: serverId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageServerResourceReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/servers:
        get:
            tags:
                - Service
            operationId: Service_PageServer
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageServerReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/template:
        get:
            tags:
                - Service
            operationId: Service_GetTemplate
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTemplateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateTemplateVersion
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UseTemplateVersionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/template/current:
        get:
            tags:
                - Service
            operationId: Service_CurrentTemplate
            parameters:
                - name: serverId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CurrentTemplateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/template/parse/{envKeyword}:
        post:
            tags:
                - Service
            operationId: Service_ParseTemplate
            parameters:
                - name: envKeyword
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ParseTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ParseTemplateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/template/preview/{envKeyword}:
        post:
            tags:
                - Service
            operationId: Service_ParseTemplatePreview
            parameters:
                - name: envKeyword
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ParseTemplatePreviewRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ParseTemplatePreviewReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/templates:
        get:
            tags:
                - Service
            operationId: Service_PageTemplate
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: serverId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageTemplateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /configure/v1/token/refresh:
        post:
            tags:
                - Service
            operationId: Service_RefreshToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddBusinessRequest:
            type: object
            properties:
                serverId:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                description:
                    type: string
                type:
                    type: string
            description: 新增业务key
        AddEnvironmentRequest:
            type: object
            properties:
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
            description: 新增环境
        AddResourceRequest:
            type: object
            properties:
                keyword:
                    type: string
                description:
                    type: string
                tag:
                    type: string
                fields:
                    type: string
                private:
                    type: boolean
                servers:
                    type: array
                    items:
                        type: integer
                        format: uint32
            description: 新增环境
        AddServerRequest:
            type: object
            properties:
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
            description: 新增环境
        AddTemplateRequest:
            type: object
            properties:
                serverId:
                    type: integer
                    format: uint32
                content:
                    type: string
                description:
                    type: string
                format:
                    type: string
            description: 新增模板
        AllBusinessValueReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AllBusinessValueReply_BusinessValue'
        AllBusinessValueReply_BusinessValue:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                environmentId:
                    type: integer
                    format: uint32
                businessId:
                    type: integer
                    format: uint32
                value:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        AllEnvironmentReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Environment'
            description: 获取环境列表
        AllResourceServerReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Server'
        AllResourceValueReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AllResourceValueReply_ResourceValue'
        AllResourceValueReply_ResourceValue:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                environmentId:
                    type: integer
                    format: uint32
                resourceId:
                    type: integer
                    format: uint32
                values:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
        Business:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                serverId:
                    type: integer
                    format: uint32
                type:
                    type: string
                keyword:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        CurrentTemplateReply:
            type: object
            properties:
                template:
                    $ref: '#/components/schemas/Template'
        Environment:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                status:
                    type: boolean
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        GetConfigureReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                serverId:
                    type: integer
                    format: uint32
                environmentId:
                    type: integer
                    format: uint32
                content:
                    type: string
                description:
                    type: string
                version:
                    type: string
                format:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
        GetEnvironmentTokenReply:
            type: object
            properties:
                token:
                    type: string
        GetServerReply:
            type: object
            properties:
                server:
                    $ref: '#/components/schemas/Server'
        GetTemplateReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                serverId:
                    type: integer
                    format: uint32
                content:
                    type: string
                description:
                    type: string
                version:
                    type: string
                isUse:
                    type: boolean
                operator:
                    type: string
                operatorId:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LoginReply:
            type: object
            properties:
                token:
                    type: string
        LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        PageBusinessReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Business'
        PageResourceReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Resource'
        PageServerReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Server'
        PageServerResourceReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Resource'
        PageTemplateReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Template'
        ParseTemplatePreviewReply:
            type: object
            properties:
                content:
                    type: string
        ParseTemplatePreviewRequest:
            type: object
            properties:
                content:
                    type: string
                envKeyword:
                    type: string
                serverId:
                    type: integer
                    format: uint32
            description: 解析配置
        ParseTemplateReply:
            type: object
            properties:
                content:
                    type: string
                format:
                    type: string
        ParseTemplateRequest:
            type: object
            properties:
                serverId:
                    type: integer
                    format: uint32
                envKeyword:
                    type: string
            description: 解析配置
        RefreshTokenReply:
            type: object
            properties:
                token:
                    type: string
        ResetEnvironmentTokenReply:
            type: object
            properties:
                token:
                    type: string
        ResetEnvironmentTokenRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
            description: 重置token
        Resource:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                description:
                    type: string
                fields:
                    type: string
                tag:
                    type: string
                private:
                    type: boolean
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        Server:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Template:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                serverId:
                    type: integer
                    format: uint32
                description:
                    type: string
                version:
                    type: string
                isUse:
                    type: boolean
                content:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
        UpdateBusinessRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                description:
                    type: string
                type:
                    type: string
            description: 修改业务key
        UpdateBusinessValueRequest:
            type: object
            properties:
                businessId:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/UpdateBusinessValueRequest_BusinessValue'
            description: 修改资源值
        UpdateBusinessValueRequest_BusinessValue:
            type: object
            properties:
                environmentId:
                    type: integer
                    format: uint32
                value:
                    type: string
                envKeyword:
                    type: string
        UpdateConfigureRequest:
            type: object
            properties:
                serverId:
                    type: integer
                    format: uint32
                envKeyword:
                    type: string
                description:
                    type: string
            description: 新增模板
        UpdateEnvironmentRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                status:
                    type: boolean
            description: 修改环境
        UpdateResourceRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                description:
                    type: string
                tag:
                    type: string
                fields:
                    type: string
                private:
                    type: boolean
                servers:
                    type: array
                    items:
                        type: integer
                        format: uint32
            description: 修改环境
        UpdateResourceValueRequest:
            type: object
            properties:
                resourceId:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/UpdateResourceValueRequest_ResourceValue'
            description: 修改资源值
        UpdateResourceValueRequest_ResourceValue:
            type: object
            properties:
                environmentId:
                    type: integer
                    format: uint32
                values:
                    type: string
                envKeyword:
                    type: string
        UpdateServerRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
            description: 修改环境
        UseTemplateVersionRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                serverId:
                    type: integer
                    format: uint32
            description: 修改模板
tags:
    - name: Service
