syntax = "proto3";

package v1;
option go_package = "./v1;v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "environment.proto";
import "server.proto";

service Service {

  rpc AllEnvironment (google.protobuf.Empty) returns (AllEnvironmentReply) {
    option (google.api.http) = {
      get: "/v1/environments"
      response_body:"list"
    };
  }

  rpc AddEnvironment (AddEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/environment",
      body:"*",
    };
  }

  rpc UpdateEnvironment (UpdateEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/environment",
      body:"*"
    };
  }

  rpc DeleteEnvironment (DeleteEnvironmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/environment",
      body:"*"
    };
  }


  rpc GetEnvironmentToken (GetEnvironmentTokenRequest) returns (GetEnvironmentTokenReply) {
    option (google.api.http) = {
      get: "/v1/environment/token"
    };
  }

  rpc ResetEnvironmentToken (ResetEnvironmentTokenRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/environment/resetToken",
      body:"*"
    };
  }

  rpc PageServer (PageServerRequest) returns (PageServerReply) {
    option (google.api.http) = {
      get: "/v1/servers",
      response_body: "list"
    };
  }

  rpc GetServer (GetServerRequest) returns (GetServerReply) {
    option (google.api.http) = {
      get: "/v1/server",
      response_body: "server"
    };
  }

  rpc AddServer (AddServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/server",
      body:"*"
    };
  }

  rpc UpdateServer (UpdateServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/server",
      body:"*"
    };
  }

  rpc DeleteServer (DeleteServerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/server",
      body:"*"
    };
  }
}


